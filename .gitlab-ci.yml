image: golang:1.14
stages:
  - init
  - test
  - build
  - release
  - package
  - publish

init:
  stage: init
  image: usvc/ci:go-dependencies
  cache:
    key: ${CI_PROJECT_REF}_${CI_COMMIT_REF_NAME}
    paths: ["./vendor"]
  artifacts:
    paths: ["./vendor"]
  script: ["entrypoint"]

unit test:
  stage: test
  image: usvc/ci:go-test
  dependencies: ["init"]
  artifacts:
    expire_in: 1 day
    paths: ["./c.out"]
  script: ["entrypoint"]

.build:
  image: usvc/ci:go-build-production
  dependencies: ["init"]
  artifacts:
    paths: ["./bin/*"]
  script:
    - git fetch
    - CMD_ROOT=config GOOS=linux GOARCH=amd64 entrypoint
    - CMD_ROOT=config GOOS=darwin GOARCH=amd64 entrypoint
    - CMD_ROOT=config GOOS=windows GOARCH=386 BIN_EXT=.exe entrypoint
test build:
  extends: .build
  stage: test
  only: ["master"]
build:
  extends: .build
  stage: build
  only: ["tags"]

version bump:
  stage: release
  only:
    - master
  image: usvc/semver:gitlab-0.3.26
  before_script:
    - apk update && apk upgrade
    - apk add openssh
    - mkdir -p ~/.ssh
    - 'printf -- "${DEPLOY_KEY}" | base64 -d > ~/.ssh/id_rsa'
    - chmod 600 -R ~/.ssh/id_rsa
    - ssh-keyscan -t rsa gitlab.com >> ~/.ssh/known_hosts
  script:
    - git remote set-url origin "git@gitlab.com:${CI_PROJECT_PATH}.git"
    - git checkout master
    - git fetch
    - semver bump --git --apply
    - git push origin master --verbose --tags
  after_script:
    - rm -rf ~/.ssh/*
